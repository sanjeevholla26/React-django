{"ast":null,"code":"var _jsxFileName = \"/home/sanjeev/proj1/frontend/src/components/reg.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Reg() {\n  _s();\n  const [name, setname] = useState('');\n  const [password, setpassword] = useState('');\n  const [response, setresponse] = useState({\n    id: '',\n    username: '',\n    password: ''\n  });\n  const [resStatus, setResStatus] = useState(0);\n  function getusername(event) {\n    setname(event.target.value);\n  }\n  function getpassword(event) {\n    setpassword(event.target.value);\n  }\n  function but() {\n    // if(resStatus===201){\n    //     setcount(0)\n    //     setstep(2)\n\n    //  }\n    //  else if(resStatus===400){\n    //      setcount(1)   \n    //  }\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: `${name}`,\n        password: `${password}`\n      })\n    };\n    fetch(`http://127.0.0.1:8000/user/`, requestOptions).then(res => {\n      setResStatus(res.status);\n      return res.json();\n    }).then(data => setresponse({\n      id: data.id,\n      username: data.username,\n      password: data.password\n    }));\n    setfname();\n    setlname();\n  }\n  const [emailid, setemailid] = useState();\n  const [fname, setfname] = useState();\n  const [lname, setlname] = useState();\n  const [resStatus2, setResStatus2] = useState();\n  function getemail(event) {\n    setemailid(event.target.value);\n  }\n  function getfirstname(event) {\n    setfname(event.target.value);\n  }\n  function getlastname(event) {\n    setlname(event.target.value);\n  }\n  function getdetail() {\n    const requestOptions1 = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: `${name}`,\n        password: `${password}`,\n        email: emailid,\n        first_name: fname,\n        last_name: lname\n      })\n    };\n    fetch(`http://127.0.0.1:8000/user/${response.id}/`, requestOptions1).then(res => {\n      setResStatus2(res.status);\n      return res.json();\n    }).then(data => console.log(data));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reg1\",\n    children: [!(resStatus === 201) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reg\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: getusername,\n        placeholder: \"Username\",\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), resStatus === 400 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errormsg\",\n        children: response.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: getpassword,\n        placeholder: \"Password\",\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), resStatus === 400 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errormsg\",\n        children: response.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: but,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), resStatus === 201 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reg\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: getemail,\n        placeholder: \"Email\",\n        value: emailid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: getfirstname,\n        placeholder: \"First Name\",\n        value: fname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: getlastname,\n        placeholder: \"Last Name\",\n        value: lname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getdetail,\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), response.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n_s(Reg, \"h4T8qBCIweqVnJcuYwBolvJph14=\");\n_c = Reg;\nvar _c;\n$RefreshReg$(_c, \"Reg\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Reg","_s","name","setname","password","setpassword","response","setresponse","id","username","resStatus","setResStatus","getusername","event","target","value","getpassword","but","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","status","json","data","setfname","setlname","emailid","setemailid","fname","lname","resStatus2","setResStatus2","getemail","getfirstname","getlastname","getdetail","requestOptions1","email","first_name","last_name","console","log","className","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/sanjeev/proj1/frontend/src/components/reg.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport '../App.css'\n\nexport default function Reg(){\n    const[name, setname] = useState('')\n    const[password, setpassword] = useState('')\n    const [response, setresponse] = useState({\n        id:'',\n        username: '',\n        password: ''\n    })\n    \n    const [resStatus, setResStatus] = useState(0)\n    \n\n    function getusername(event){\n        setname(event.target.value)\n    }\n    function getpassword(event){\n        setpassword(event.target.value)\n    }\n    function but(){\n        // if(resStatus===201){\n        //     setcount(0)\n        //     setstep(2)\n            \n        //  }\n        //  else if(resStatus===400){\n        //      setcount(1)   \n        //  }\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username:`${name}`, password : `${password}`})\n        };\n        fetch(`http://127.0.0.1:8000/user/`, requestOptions)\n        .then(res => {\n            setResStatus(res.status)\n            return(\n                res.json()\n            )\n        })\n        .then(data => setresponse({\n            id:data.id,\n            username:data.username,\n            password:data.password\n        }))\n\n        setfname()\n        setlname()\n        \n    }\n\n    const [emailid, setemailid] = useState()\n    const [fname, setfname] = useState()\n    const [lname, setlname] = useState()\n    const [resStatus2, setResStatus2] = useState()\n\n    function getemail(event){\n        setemailid(event.target.value)\n    }\n\n    function getfirstname(event) {\n        setfname(event.target.value)\n    }\n\n    function getlastname(event){\n        setlname(event.target.value)\n    }\n\n    function getdetail(){\n        const requestOptions1 = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username:`${name}`, password : `${password}`, email: emailid, first_name:fname, last_name:lname})\n        };\n        fetch(`http://127.0.0.1:8000/user/${response.id}/`, requestOptions1)\n        .then(res => {\n            setResStatus2(res.status)\n            return(\n                res.json()\n            )\n        })\n        .then(data => console.log(data))\n        \n    }\n    \n     \n    return(\n        <div className=\"reg1\">\n            { !(resStatus===201) &&\n            <div className=\"reg\">\n                <input type='text' onChange={getusername} placeholder='Username' value={name}/>\n                {resStatus===400 && <p className=\"errormsg\">{response.username}</p>}\n                <input type='password' onChange={getpassword} placeholder='Password' value={password} />\n                {resStatus===400 && <p className=\"errormsg\">{response.password}</p>}\n                <button onClick={but}>Next</button>\n            </div>}\n            {resStatus===201 &&\n            <div className=\"reg\">\n                <input type='text' onChange={getemail} placeholder='Email' value={emailid}/>\n                <input type='text' onChange={getfirstname} placeholder='First Name' value={fname} />\n                <input type='text' onChange={getlastname} placeholder='Last Name' value={lname} />\n                <button onClick={getdetail}>SUBMIT</button>\n                {response.id}\n            </div>}\n\n            </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}